@model AutoWorkshop.Web.Models.AppointmentViewModel

@{ ViewData["Title"] = "Create"; }

<h2>Create</h2>

<h4>Appointment</h4>
<hr />



<ejs-schedule id="schedule" height="550" endHour="18:00" startHour="8:00" actionComplete="Complete" editorTemplate="#EventEditorTemplate" popupOpen="onPopupOpen">
    <e-schedule-eventsettings dataSource=@Model.Appointments></e-schedule-eventsettings>
</ejs-schedule>



@*<div class="form-group">
        <ejs-dropdownlist id="Vehicless" dataSource="@Model.Vehicles" ejs-for="VehicleId" floatLabelType="Auto" placeholder="Select a Vehicle">
            <e-dropdownlist-fields text="LicensePlate" value="Id"></e-dropdownlist-fields>
        </ejs-dropdownlist>
    </div>

<div>
    <ejs-textbox id="txt" type="text" placeholder="quakluqer coisa">

    </ejs-textbox>

</div>*@


<script id="EventEditorTemplate" type="text/template">
    <table class="custom-event-editor" width="100%" cellpadding="5">
        <tbody>
            <tr>
                <td class="e-textlabel">Client</td>
                <td colspan="4">
                    <input type="text" id="ClientId" name="ClientId" class="e-field" style="width: 100%" />
                </td>
            </tr>
            <tr>
                <td class="e-textlabel">Vehicle</td>
                <td colspan="4">
                    <input type="text" disabled id="VehicleId" name="VehicleId" class="e-field" style="width: 100%" />
                </td>
            </tr>
            <tr>
                <td class="e-textlabel">Appointment Type</td>
                <td colspan="4">
                    <input type="text" id="AppointmentTypeId" name="AppointmentTypeId" class="e-field" style="width: 100%" />
                </td>
            </tr>
            <tr>
                <td class="e-textlabel">Mechanic</td>
                <td colspan="4">
                    <input type="text" id="MechanicId" name="MechanicId" class="e-field" style="width: 100%" />
                </td>
            </tr>
            <tr style="display: none;">
                <td class="e-textlabel">Day</td>
                <td colspan="4">
                    <input id="StartTime" class="e-field" name="StartTime" />
                </td>
            </tr>
            <tr style="display: none;">
                <td class="e-textlabel">Day</td>
                <td colspan="4">
                    <input id="EndTime" class="e-field" name="EndTime" />
                </td>
            </tr>
            <tr>
                <td class="e-textlabel">Reason</td>
                <td colspan="4">
                    <textarea id="Information" class="e-field e-input" name="Information" rows="3" cols="50" style="width: 100%; height: 60px !important; resize: vertical"></textarea>
                </td>
            </tr>
        </tbody>
    </table>
</script>


<br />
<br />
<div>
    <h4>Unconfirmed Appointments</h4>
</div>
<br />
<br />
<br />



<form asp-action="Update" id="app">
    <div class="form-group">
         <table id="repair" class="table table-striped table-bordered table-hover" cellspacing="0" width="100%">
            <thead class="thead-dark">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Client)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Client.PhoneNumber)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Vehicle)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.StartTime)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Information)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Mechanic)
                    </th>
                    <th>
                        Confirm
                    </th>
                    <th>
                       teste
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.UnconfirmedAppointments)
                {
                    <tr class="text-center" style="height:10px">
                        <td class="align-middle">
                            @Html.Hidden("Id", item.Id)  @*hidden value porque precisava do valor no submit*@
                            @Html.DisplayFor(modelItem => item.Client.FullName)
                        </td>
                        <td class="align-middle">
                            @Html.DisplayFor(modelItem => item.Client.PhoneNumber)
                        </td>
                        <td class="align-middle">
                            @Html.DisplayFor(modelItem => item.Vehicle.LicensePlate)
                        </td>
                        <td class="align-middle">
                            @Html.DisplayFor(modelItem => item.StartTime)
                        </td>

                        <td class="align-middle">
                            <div class="dropdown ">
                                <button class="btn btn-secondary dropdown-toggle" style="padding:3px; width: 100px" type="button" id="dropdownMenu2" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    Info
                                </button>
                                <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenu2">
                                    <div class="" style="max-width:50em ;padding: 10px; word-wrap: break-word">
                                        @Html.DisplayFor(modelItem => item.Information)
                                    </div>
                                </div>
                            </div>
                        </td>
                        <td class="align-middle">
                            <div class="form-group" style="margin-bottom:0px;">
                                <select asp-for="MechanicId" asp-items="Model.MechanicsCombo" style="width:200px;max-height:35px; font-size:small " class="form-control"></select>
                                <span asp-validation-for="MechanicId" class="text-danger"></span>
                                <div class=" hidden_div_error" id="div_error">
                                    Please select a Mechanic!
                                </div>
                            </div>                       
                        </td>
                        <td class="align-middle">
                            @*<input type="button" onclick="Update()" value="L" />*@
                            <input type="submit" value="L" />
                        </td>

                    </tr>
                }
            </tbody>
         </table>
    </div>
</form>

<br />
<br />





<script type="text/javascript">

     function Update() {


         $(document).ready(function () {

            var datat = $("#app").serialize();

            console.log(datat);

            $.ajax({
                type: "post",
                data: datat,
                url: '@Url.Action("Update", "Appointments")',
                dataType: "json",
                success: function (response) {
                    if (response === false) {

                        var error = document.getElementById("div_error");
                        error.style.visibility = "visible";
                        error.style.display = "inline";

                        return;
                    }

                    var error = document.getElementById("div_error");
                    error.style.visibility = "hidden";
                    error.style.display = "none";
  


                },
                error: function (jqxhr, status, exception) {
                    alert('Exception:', exception);

                    var error = document.getElementById("div_error");
                    error.style.visibility = "visible";

                    return;
                }
            })
         });
    }




    $(document).ready(function () {
        $('#repair').DataTable();
    });


    function onPopupOpen(args) {
        if (args.type === 'Editor') {
            var statusElement = args.element.querySelector('#VehicleId');
            var typeElement = args.element.querySelector('#AppointmentTypeId');
            var mechaElement = args.element.querySelector('#MechanicId');
            var clientElement = args.element.querySelector('#ClientId');


            console.log(statusElement.value[0]);
            console.log(typeElement.value[0]);
            console.log(mechaElement.value[0]);
            console.log(clientElement.value[0]);


            if (!statusElement.classList.contains('e-dropdownlist')) {

                var clientDropDown = new ej.dropdowns.DropDownList({
                    placeholder: 'Choose Client', value: clientElement.value,
                    dataSource: clt, fields: { text: 'Text', value: 'Id' },
                    change: onChangeClient(clientElement.value[0]),
                });

                var dropDownListObject = new ej.dropdowns.DropDownList({
                    placeholder: 'Choose Vehicle',
                    dataSource: vec, fields: { text: 'Text', value: 'Id' },
                    value: statusElement.value, change: onChangeVehicle(statusElement.value[0])
                });

                var typeDropDown = new ej.dropdowns.DropDownList({
                    placeholder: 'Choose Type', value: typeElement.value[0],
                    dataSource: type, fields: { text: 'Text', value: 'Id' },
                    change: onChangeAppointmentType(typeElement.value[0])
                });
                var mechaDropDown = new ej.dropdowns.DropDownList({
                    placeholder: 'Choose Mechanic', value: mechaElement.value[0],
                    dataSource: mecha, fields: { text: 'Text', value: 'Id' },
                    change: onChangeMechanic(mechaElement.value[0])
                });

                var startElement = args.element.querySelector('#StartTime');
                if (!startElement.classList.contains('e-datepicker')) {
                    new ej.calendars.DateTimePicker({
                        value: new Date(startElement.value) || new Date()
                    }, startElement);
                }

                var endElement = args.element.querySelector('#EndTime');
                if (!endElement.classList.contains('e-datepicker')) {
                    new ej.calendars.DatePicker({
                        value: new Date(endElement.value) || new Date()
                    }, endElement);
                }

                dropDownListObject.appendTo(statusElement);
                statusElement.setAttribute('name', 'VehicleId');

                typeDropDown.appendTo(typeElement);
                typeElement.setAttribute('name', 'AppointmentTypeId');

                mechaDropDown.appendTo(mechaElement);
                mechaElement.setAttribute('name', 'MechanicId');

                clientDropDown.appendTo(clientElement);
                clientElement.setAttribute('name', 'ClientId');
            }

        }
    }

    function Complete(args){
        console.log(args);
        var type = document.getElementById("AppointmentTypeId");

        if (args.requestType === 'eventCreated') {
            args.data[0].StartTime = args.data[0].StartTime.toISOString();
            args.data[0].EndTime = args.data[0].EndTime.toISOString();
            args.data[0].Subject = type.value;


            $.ajax({
                type: "post",
                data: args.data[0],
                url: '@Url.Action("Create", "Appointments")',
                dataType: "json",
                success: function (response) {
                    if (response !== false) {
                        alert("nice");
                        return;
                    }
                }
            })
        }

        if (args.requestType === 'eventChanged') {

            args.data[0].StartTime = args.data[0].StartTime.toISOString();
            args.data[0].EndTime = args.data[0].EndTime.toISOString();
            args.data[0].Subject = type.value;

            $.ajax({
                type: "post",
                data: args.data[0],
                url: '@Url.Action("Edit", "Appointments")',
                dataType: "json",
                success: function (response) {
                    if (response !== false) {
                        alert("nice");
                        return;
                    }
                }
            })
        }

        if (args.requestType === 'eventRemoved') {
            var appId = args.data[0].Id;

            $.ajax({
                type: "post",
                data: { Id: appId },
                url: '@Url.Action("Delete", "Appointments")',
                dataType: "json",
                success: function (response) {
                    appId = response;
                }
            })
        }

    }

    function onChangeVehicle(Id) {

        if (Id !== undefined) {
             var statusElement = document.getElementById('VehicleId');

            $.ajax({
                type: "get",
                data: {Id: Id},
                url: '@Url.Action("GetVehicle", "Appointments")',
                dataType: "json",
                success: function (response) {
                    statusElement.value = response;
                }

            })
        }
    }

    function onChangeAppointmentType(Id) {

        if (Id !== undefined) {
             var statusElement = document.getElementById('AppointmentTypeId');

            $.ajax({
                type: "get",
                data: { Id: Id },
                url: '@Url.Action("GetAppointmentType", "Appointments")',
                dataType: "json",
                success: function (response) {
                    statusElement.value = response;
                }

            })
        }
    }


    function onChangeMechanic(Id) {

        if (Id !== undefined) {
            var statusElement = document.getElementById('MechanicId');

            $.ajax({
                type: "get",
                data: { Id: Id },
                url: '@Url.Action("GetMechanic", "Appointments")',
                dataType: "json",
                success: function (response) {
                    statusElement.value = response;
                }

            })
        }
    }

    function onChangeClient(Id) {

        if (Id !== undefined) {
            var statusElement = document.getElementById('ClientId');

            $.ajax({
                type: "get",
                data: { Id: Id },
                url: '@Url.Action("GetClient", "Appointments")',
                dataType: "json",
                success: function (response) {
                    statusElement.value = response;
                }
                //error: function (jqxhr, status, exception) {
                //    alert('Exceptionmechanic:', exception);
                //}
            })
        }
        else {

            @*var statusElement = document.getElementById('ClientId');

            $.ajax({
                type: "get",
                data: { Id: Id },
                url: '@Url.Action("GetClientVehicles", "Appointments")',
                dataType: "json",
                success: function (response) {
                    statusElement.values = response;
                }
            })*@
        }
    }

    function getClientVehicles(Id) {
          $.ajax({
                type: "get",
                data: { Id: Id },
                url: '@Url.Action("GetClientVehicles", "Appointments")',
                dataType: "json",
                success: function (response) {
                    statusElement.value = response;
                }
                //error: function (jqxhr, status, exception) {
                //    alert('Exceptionmechanic:', exception);
                //}
            })
    }



</script>


<script>
    var vec = [{ 'Id': 0, 'Text': 'Choose Vehicle' }];
    var type = [{ 'Id': 0, 'Text': 'Choose Type' }];
    var mecha = [{ 'Id': 0, 'Text': 'Choose Mechanic' }];
    var clt = [{ 'Id': 0, 'Text': 'Choose Client' }];

    @foreach (var vehicle in Model.Vehicles)
    {
        @:vec.push({'Id': @vehicle.Id, 'Text': '@vehicle.LicensePlate' });
    }

    @foreach (var type in Model.AppointmentTypes)
    {
        @:type.push({'Id': @type.Id, 'Text': '@type.Type' });
    }

    @foreach (var mecha in Model.Mechanics)
    {
        @:mecha.push({'Id': @mecha.Id, 'Text': '@mecha.FullName' });
    }

    @foreach (var client in Model.Clients)
    {
        @:clt.push({'Id': @client.Id, 'Text': '@client.PhoneNumber' });
    }

</script>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
