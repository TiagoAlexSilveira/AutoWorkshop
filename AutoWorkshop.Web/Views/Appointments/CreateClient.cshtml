@model AutoWorkshop.Web.Models.AppointmentViewModel

@{ ViewData["Title"] = "Create"; }

<h2>Create</h2>

<h4>Appointment</h4>
<hr />


<ejs-schedule id="schedule" height="550" endHour="18:00" startHour="8:00" actionComplete="Complete" editorTemplate="#EventEditorTemplate" popupOpen="onPopupOpen">
    <e-schedule-eventsettings dataSource=@Model.Appointments></e-schedule-eventsettings>
</ejs-schedule>


<script id="EventEditorTemplate" type="text/template">
    <table class="custom-event-editor" width="100%" cellpadding="5">
        <tbody>
            @*<tr>
                <td class="e-textlabel">Client</td>
                <td colspan="4">
                    <input type="text" id="ClientId" name="ClientId" class="e-field" style="width: 100%" />
                </td>
            </tr>*@
            <tr>
                <td class="e-textlabel">Vehicle</td>
                <td colspan="4">
                    <input type="text" disabled id="VehicleId" name="VehicleId" class="e-field" style="width: 100%" />
                </td>
            </tr>
            <tr>
                <td class="e-textlabel">Appointment Type</td>
                <td colspan="4">
                    <input type="text" id="AppointmentTypeId" name="AppointmentTypeId" class="e-field" style="width: 100%" />
                </td>
            </tr>
            @*<tr>
                <td class="e-textlabel">Mechanic</td>
                <td colspan="4">
                    <input type="text" id="MechanicId" name="MechanicId" class="e-field" style="width: 100%" />
                </td>
            </tr>*@
            <tr style="display: none;">
                <td class="e-textlabel">Day</td>
                <td colspan="4">
                    <input id="StartTime" class="e-field" name="StartTime" />
                </td>
            </tr>
            <tr style="display: none;">
                <td class="e-textlabel">Day</td>
                <td colspan="4">
                    <input id="EndTime" class="e-field" name="EndTime" />
                </td>
            </tr>
            <tr>
                <td class="e-textlabel">Reason</td>
                <td colspan="4">
                    <textarea id="Information" class="e-field e-input" name="Information" rows="3" cols="50" style="width: 100%; height: 60px !important; resize: vertical"></textarea>
                </td>
            </tr>
        </tbody>
    </table>
</script>

<script>

    function onPopupOpen(args) {
        if (args.type === 'Editor') {
            var statusElement = args.element.querySelector('#VehicleId');
            var typeElement = args.element.querySelector('#AppointmentTypeId');
            //var mechaElement = args.element.querySelector('#MechanicId');
            //var clientElement = args.element.querySelector('#ClientId');


            console.log(statusElement.value[0]);
            console.log(typeElement.value[0]);
            //console.log(mechaElement.value[0]);
            //console.log(clientElement.value[0]);


            if (!statusElement.classList.contains('e-dropdownlist')) {

                var dropDownListObject = new ej.dropdowns.DropDownList({
                    placeholder: 'Choose Vehicle',
                    dataSource: vec, fields: { text: 'Text', value: 'Id' },
                    value: statusElement.value, change: onChangeVehicle(statusElement.value[0])
                });

                var typeDropDown = new ej.dropdowns.DropDownList({
                    placeholder: 'Choose Type', value: typeElement.value[0],
                    dataSource: type, fields: { text: 'Text', value: 'Id' },
                    change: onChangeAppointmentType(typeElement.value[0])
                });

                var startElement = args.element.querySelector('#StartTime');
                if (!startElement.classList.contains('e-datepicker')) {
                    new ej.calendars.DateTimePicker({
                        value: new Date(startElement.value) || new Date()
                    }, startElement);
                }

                var endElement = args.element.querySelector('#EndTime');
                if (!endElement.classList.contains('e-datepicker')) {
                    new ej.calendars.DatePicker({
                        value: new Date(endElement.value) || new Date()
                    }, endElement);
                }

                dropDownListObject.appendTo(statusElement);
                statusElement.setAttribute('name', 'VehicleId');

                typeDropDown.appendTo(typeElement);
                typeElement.setAttribute('name', 'AppointmentTypeId');
            }

        }
    }


    function Complete(args){
        console.log(args);
        var type = document.getElementById("AppointmentTypeId");

        if (args.requestType === 'eventCreated') {
            args.data[0].StartTime = args.data[0].StartTime.toISOString();
            args.data[0].EndTime = args.data[0].EndTime.toISOString();
            args.data[0].Subject = type.value;


            $.ajax({
                type: "post",
                data: args.data[0],
                url: '@Url.Action("CreateClient", "Appointments")',
                dataType: "json",
                success: function (response) {
                    if (response !== false) {
                        alert("nice");
                        return;
                    }
                }
            })
        }

        @*if (args.requestType === 'eventChanged') {

            args.data[0].StartTime = args.data[0].StartTime.toISOString();
            args.data[0].EndTime = args.data[0].EndTime.toISOString();
            args.data[0].Subject = type.value;

            $.ajax({
                type: "post",
                data: args.data[0],
                url: '@Url.Action("Edit", "Appointments")',
                dataType: "json",
                success: function (response) {
                    if (response !== false) {
                        alert("nice");
                        return;
                    }
                }
            })
        }*@

        @*if (args.requestType === 'eventRemoved') {
            var appId = args.data[0].Id;

            $.ajax({
                type: "post",
                data: { Id: appId },
                url: '@Url.Action("Delete", "Appointments")',
                dataType: "json",
                success: function (response) {
                    appId = response;
                }
            })
        }*@

    }

    function onChangeVehicle(Id) {

        if (Id !== undefined) {
             var statusElement = document.getElementById('VehicleId');

            $.ajax({
                type: "get",
                data: {Id: Id},
                url: '@Url.Action("GetVehicle", "Appointments")',
                dataType: "json",
                success: function (response) {
                    statusElement.value = response;
                }

            })
        }
    }

    function onChangeAppointmentType(Id) {

        if (Id !== undefined) {
             var statusElement = document.getElementById('AppointmentTypeId');

            $.ajax({
                type: "get",
                data: { Id: Id },
                url: '@Url.Action("GetAppointmentType", "Appointments")',
                dataType: "json",
                success: function (response) {
                    statusElement.value = response;
                }

            })
        }
    }


    @*function onChangeMechanic(Id) {

        if (Id !== undefined) {
            var statusElement = document.getElementById('MechanicId');

            $.ajax({
                type: "get",
                data: { Id: Id },
                url: '@Url.Action("GetMechanic", "Appointments")',
                dataType: "json",
                success: function (response) {
                    statusElement.value = response;
                }

            })
        }
    }*@

    @*function onChangeClient(Id) {

        if (Id !== undefined) {
            var statusElement = document.getElementById('ClientId');

            $.ajax({
                type: "get",
                data: { Id: Id },
                url: '@Url.Action("GetClient", "Appointments")',
                dataType: "json",
                success: function (response) {
                    statusElement.value = response;
                }
                //error: function (jqxhr, status, exception) {
                //    alert('Exceptionmechanic:', exception);
                //}
            })
        }
        else {

            var statusElement = document.getElementById('ClientId');

            $.ajax({
                type: "get",
                data: { Id: Id },
                url: '@Url.Action("GetClientVehicles", "Appointments")',
                dataType: "json",
                success: function (response) {
                    statusElement.values = response;
                }
            })
        }
    }*@

    function getClientVehicles(Id) {
          $.ajax({
                type: "get",
                data: { Id: Id },
                url: '@Url.Action("GetClientVehicles", "Appointments")',
                dataType: "json",
                success: function (response) {
                    statusElement.value = response;
                }
                //error: function (jqxhr, status, exception) {
                //    alert('Exceptionmechanic:', exception);
                //}
            })
    }



</script>


<script>
    var vec = [{ 'Id': 0, 'Text': 'Choose Vehicle' }];
    var type = [{ 'Id': 0, 'Text': 'Choose Type' }];

    @foreach (var vehicle in Model.Vehicles)
    {
        @:vec.push({'Id': @vehicle.Id, 'Text': '@vehicle.LicensePlate' });
    }

    @foreach (var type in Model.AppointmentTypes)
    {
        @:type.push({'Id': @type.Id, 'Text': '@type.Type' });
    }

</script>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
